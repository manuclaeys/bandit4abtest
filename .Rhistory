plot
dataset_moodle  %>%
precedence_matrix(type = "relative-antecedent") %>%
plot
dataset_moodle %>%
precedence_matrix(type = "relative-consequent") %>%
plot
dataset_moodle %>%
processing_time("activity",units ='week') %>%
plot
dataset_moodle %>%
idle_time("resource") %>%
plot()
dataset_moodle %>%
idle_time("resource")
dataset_moodle %>%
processing_time("activity",units ='week')
View(dataset_moodle)
dataset_moodle %>%
processing_time("activity",units ='mins') %>%
plot
dataset_moodle %>%
processing_time(level ="activity",units ='mins' , append = T) %>%
plot
dataset_moodle %>%
processing_time(level ="activity",units ='mins' , append = F) %>%
plot
dataset_moodle %>%
processing_time(level ="activity",units ='mins' ,  sort = FALSE) %>%
plot
dataset_moodle %>%
processing_time(level ="case",units ='mins' ) %>%
plot
dataset_moodle %>%
processing_time(level ="activity",units ='mins' ) %>%
plot
dataset_moodle %>%
processing_time(level ="resource-activity",units ='mins' ) %>%
plot
activity
dataset_moodle %>%
processing_time(level ="activity",units ='mins' ) %>%
plot
dataset_moodle %>%
idle_time("resource")
dataset_moodle.order %>%
idle_time("resource")
dataset_moodle %>%
resource_frequency('ressource')
dataset_moodle %>%
resource_frequency('resource')
dataset_moodle %>%
ressource_involvement("resource") %>% plot
dataset_moodle %>%
resource_involvement("resource") %>% plot
dataset_moodle %>% activity_presence() %>%
plot
dataset_moodle %>%
idle_time("resource")
dataset_moodle %>%
idle_time("resource") %>%
plot()
dataset_moodle %>%
processing_time(level ="activity",units ='mins' ) %>%
plot
dataset_moodle %>%
throughput_time("log") %>%
plot()
dataset_moodle %>%
processing_time("activity") %>% plot
View(dataset_moodle)
#-----------------------fichier moodle-----------------------------------------
dataset_moodle_old = read.csv('moodle_log_negative.csv')
dataset_moodle_old ['lifecycle'] = 'start'
dataset_moodle_old $CreatedDate <- as.POSIXct(dataset_moodle_old$CreatedDate, "%m/%d/%Y %H:%M:%S")
dataset_moodle_old $activity_instance_id <- 1:nrow(dataset_moodle_old)
dataset_moodle<-dataset_moodle_old %>%
as.data.frame%>%
eventlog(case_id="AuthorDisplayName",
activity_id="FromString",
activity_instance_id ="activity_instance_id",
timestamp="CreatedDate",
resource_id="IssueKey",
lifecycle_id="lifecycle" )
#Obtenir des informations à partir des journaux d'événements
#! Uniquement sur un eventlog
dataset_moodle %>% mapping
dataset_moodle %>%
throughput_time("log") %>%
plot()
dataset_moodle %>%
resource_frequency('resource')
dataset_moodle %>%
resource_involvement("resource") %>% plot
dataset_moodle %>% activity_presence() %>%
plot
dataset_moodle %>%
processing_time("activity") %>% plot
dataset_moodle %>%
activity_frequency("activity")
dataset_moodle %>%
activity_frequency("log")
dataset_moodle %>%
activity_frequency("trace")
dataset_moodle %>%
start_activities("resource-activity")
dataset_moodle %>%
end_activities("resource-activity")
dataset_moodle %>%
process_map()
dataset_moodle %>%
process_map(type = frequency("relative"))
dataset_moodle %>%
process_map(type = frequency("absolute"))
dataset_moodle %>%
process_map(type = frequency("relative_case"))
patients %>%
process_map(type = frequency("relative_case", color_scale = "Purples"))
dataset_moodle %>%
process_map(performance(median, "days"))
dataset_moodle %>%
process_map(type = frequency("relative_case", color_scale = "Purples"))
dataset_moodle %>%
process_map(performance(median, "days"))
dataset_moodle  %>%
process_map(performance(mean, "hours"))
dataset_moodle %>%
precedence_matrix(type = "absolute")
dataset_moodle %>%
precedence_matrix(type = "absolute") %>%
plot
?performance_dashboard
performance_dashboard
########################"
library(processmonitR)
install.packages("processmonitR")
?performance_dashboard
performance_dashboard
########################"
library(processmonitR)
performance_dashboard
?performance_dashboard
?performance_dashboard(dataset_moodle )
performance_dashboard(dataset_moodle )
activity_dashboard(dataset_moodle )
rework_dashboard(dataset_moodle )
resource_dashboard(dataset_moodle )
View(dataset_moodle)
example_log_2  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_2.csv', sep=',')
example_log_2$timestamp <- as.POSIXct(example_log_2$timestamp,format="%Y-%m-%dT%H:%M")
example_log_2_new = example_log_2 %>%
mutate(status = "complete",
activity_instance = 1:nrow(.)) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
example_log_2_new %>%
idle_time("resource", units = "days")
#Chargement des package
library("bupaR")
library("eventdataR")
patients %>% summary
sepsis %>% summary
hospital %>% summary
hospital_billing %>% summary
traffic_fines %>% summary
data = patients
data = sepsis
data = hospital
data = hospital_billing
data = traffic_fines
example_log_1  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_1.csv', sep=',')
library(lubridate)
example_log_1$timestamp <- as.POSIXct(example_log_1$timestamp,format="%Y-%m-%dT%H:%M")
example_log_1 %>% #a data.frame with the information in the table above
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
example_log_2  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_2.csv', sep=',')
example_log_2$timestamp <- as.POSIXct(example_log_2$timestamp,format="%Y-%m-%dT%H:%M")
example_log_2_new = example_log_2 %>%
mutate(status = "complete",
activity_instance = 1:nrow(.)) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
example_log_3  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_3.csv', sep=',')
example_log_3$timestamp <- as.POSIXct(example_log_3$timestamp,format="%Y-%m-%dT%H:%M")
example_log_3_new =  example_log_3 %>%
mutate(resource = NA) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
example_log_4  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_4.csv', sep=',')
example_log_4$start<- as.POSIXct(example_log_4$start,format="%Y-%m-%dT%H:%M")
example_log_4$complete  <- as.POSIXct(example_log_4$complete ,format="%Y-%m-%dT%H:%M")
example_log_4$schedule <- as.POSIXct(example_log_4$schedule ,format="%Y-%m-%dT%H:%M")
library(tidyverse)
example_log_4 %>%
mutate(activity_instance = 1:nrow(.)) %>%
gather(status, timestamp, schedule, start, complete)  %>%
mutate(resource = NA) %>%
filter(!is.na(timestamp)) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
#Obtenir des informations à partir des journaux d'événements
#! Uniquement sur un eventlog
patients %>% mapping
example_log_2_new  %>% mapping
patients %>%
idle_time("resource", units = "days")
patients %>%
idle_time("resource", units = "days") %>%
plot()
patients %>%
processing_time("activity") %>%
plot
patients %>%
throughput_time("log") %>%
plot()
patients %>%
activity_frequency("activity")
patients %>%
activity_frequency("log")
patients %>%
activity_frequency("trace")
patients %>%
start_activities("resource-activity")
patients %>%
end_activities("resource-activity")
patients %>%
process_map()
patients %>%
process_map(type = frequency("relative"))
patients %>%
process_map(type = frequency("absolute"))
patients %>%
process_map(type = frequency("relative_case"))
patients %>%
process_map(type = frequency("relative_case", color_scale = "Purples"))
patients %>%
process_map(performance(median, "days"))
patients %>%
process_map(performance(mean, "hours"))
data = traffic_fines
data$amount[is.na(data$amount)] <- 0
performance_dashboard(patients)
resource_dashboar(patients)
activity_dashboard(patients)
rework_dashboard(patients)
View(example_log_1)
rework_dashboard(example_log_1)
rework_dashboard(example_log_2_new)
View(example_log_3_new)
rework_dashboard(example_log_3_new)
resource_dashboard(patients)
performance_dashboard(patients)
performance_dashboard(patients)
activity_dashboard(patients)
#Chargement des package
library("bupaR")
#Chargement des package
library("bupaR")
library("eventdataR")
#Chargement des package
library("bupaR")
library("eventdataR")
patients %>% summary
sepsis %>% summary
hospital %>% summary
hospital_billing %>% summary
hospital_billing %>% summary
traffic_fines %>% summary
data = patients
View(data)
View(data)
patients %>% summary
data = sepsis
View(data)
data = hospital_billing
View(data)
data = traffic_fines
example_log_1  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_1.csv', sep=',')
setwd("~/Documents/Cours/Business process/Formation")
example_log_1  =  read.csv2('example_log_1.csv', sep=',')
example_log_1  =  read.csv2('data/example_log_1.csv', sep=',')
example_log_1  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_1.csv', sep=',')
View(example_log_1)
View(example_log_1)
library(lubridate)
View(example_log_1)
View(example_log_1)
example_log_1$timestamp <- as.POSIXct(example_log_1$timestamp,format="%Y-%m-%dT%H:%M")
example_log_1$timestamp <- as.POSIXct(example_log_1$timestamp,format="%Y-%m-%dT%H:%M")
example_log_1 %>% #a data.frame with the information in the table above
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
example_log_2  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_2.csv', sep=',')
View(example_log_2)
View(example_log_2)
example_log_2$timestamp <- as.POSIXct(example_log_2$timestamp,format="%Y-%m-%dT%H:%M")
View(example_log_2)
example_log_2_new = example_log_2 %>%
mutate(status = "complete",
activity_instance = 1:nrow(.)) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
View(example_log_2_new)
View(example_log_2)
example_log_3  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_3.csv', sep=',')
View(example_log_3)
example_log_3$timestamp <- as.POSIXct(example_log_3$timestamp,format="%Y-%m-%dT%H:%M")
example_log_3_new =  example_log_3 %>%
mutate(resource = NA) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
View(example_log_3_new)
example_log_4  =  read.csv2('~/Documents/Cours/Business process/Formation/data/example_log_4.csv', sep=',')
View(example_log_4)
example_log_4$start<- as.POSIXct(example_log_4$start,format="%Y-%m-%dT%H:%M")
example_log_4$complete  <- as.POSIXct(example_log_4$complete ,format="%Y-%m-%dT%H:%M")
example_log_4$schedule <- as.POSIXct(example_log_4$schedule ,format="%Y-%m-%dT%H:%M")
library(tidyverse)
example_log_4 %>%
mutate(activity_instance = 1:nrow(.)) %>%
gather(status, timestamp, schedule, start, complete)  %>%
mutate(resource = NA) %>%
filter(!is.na(timestamp)) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
example_log_4_2 = example_log_4 %>%
mutate(activity_instance = 1:nrow(.)) %>%
gather(status, timestamp, schedule, start, complete)  %>%
mutate(resource = NA) %>%
filter(!is.na(timestamp)) %>%
eventlog(
case_id = "patient",
activity_id = "activity",
activity_instance_id = "activity_instance",
lifecycle_id = "status",
timestamp = "timestamp",
resource_id = "resource"
)
View(example_log_4_2)
example_log_4_2 = example_log_4 %>%
mutate(activity_instance = 1:nrow(.)) %>%
gather(status, timestamp, schedule, start, complete)  %>%
mutate(resource = NA)
View(example_log_4_2)
example_log_4_2 = example_log_4 %>%
mutate(activity_instance = 1:nrow(.)) %>%
gather(status, timestamp, schedule, start, complete)  %>%
mutate(resource = NA) %>%
filter(!is.na(timestamp))
#Obtenir des informations à partir des journaux d'événements
#! Uniquement sur un eventlog
patients %>% mapping
toto = patients
View(toto)
#Obtenir des informations à partir des journaux d'événements
#! Uniquement sur un eventlog
patients %>% mapping
example_log_2_new  %>% mapping
patients %>%
idle_time("resource", units = "days")
patients %>%
idle_time("resource", units = "days") %>%
plot()
patients %>%
processing_time("activity") %>%
plot
patients %>%
throughput_time("log") %>%
plot()
patients %>%
activity_frequency("activity")
patients %>%
activity_frequency("log")
patients %>%
activity_frequency("trace")
patients %>%
start_activities("resource-activity")
patients %>%
end_activities("resource-activity")
patients %>%
process_map()
patients %>%
process_map(type = frequency("relative"))
patients %>%
process_map(type = frequency("absolute"))
patients %>%
process_map(type = frequency("relative_case"))
patients %>%
process_map(type = frequency("relative_case", color_scale = "Purples"))
patients %>%
process_map(performance(median, "days"))
patients %>%
process_map(performance(mean, "hours"))
data = traffic_fines
View(data)
data$amount[is.na(data$amount)] <- 0
data %>%
process_map(type = custom(attribute = "amount", units = "EUR"))
library(processanimateR)
animate_process(patients)
library(processmonitR)
performance_dashboard(patients)
resource_dashboard(patients)
patients %>%
precedence_matrix(type = "absolute")
patients %>%
precedence_matrix(type = "absolute") %>%
plot
patients %>%
precedence_matrix(type = "relative-antecedent") %>%
plot
patients %>%
precedence_matrix(type = "relative-consequent") %>%
plot
#-----------------------fichier moodle-----------------------------------------
dataset_moodle_old = read.csv('moodle_log_negative.csv')
View(dataset_moodle_old)
dataset_moodle_old ['lifecycle'] = 'start'
dataset_moodle_old $CreatedDate <- as.POSIXct(dataset_moodle_old$CreatedDate, "%m/%d/%Y %H:%M:%S")
dataset_moodle_old $activity_instance_id <- 1:nrow(dataset_moodle_old)
dataset_moodle<-dataset_moodle_old %>%
as.data.frame%>%
eventlog(case_id="AuthorDisplayName",
activity_id="FromString",
activity_instance_id ="activity_instance_id",
timestamp="CreatedDate",
resource_id="IssueKey",
lifecycle_id="lifecycle" )
#Obtenir des informations à partir des journaux d'événements
#! Uniquement sur un eventlog
dataset_moodle %>% mapping
dataset_moodle %>%
throughput_time("log") %>%
plot()
dataset_moodle %>%
process_map(type = frequency("relative"))
performance_dashboard(patients)
activity_dashboard(patients)
#Obtenir des informations à partir des journaux d'événements
#! Uniquement sur un eventlog
dataset_moodle %>% mapping
dataset_moodle %>%
throughput_time("log") %>%
plot()
dataset_moodle %>%
resource_frequency('resource')
dataset_moodle %>%
processing_time("activity") %>% plot
dataset_moodle %>%
activity_frequency("activity")
dataset_moodle %>%
activity_frequency("trace")
dataset_moodle %>%
process_map()
animate_process(dataset_moodle)
dataset_moodle %>%
precedence_matrix(type = "absolute")
