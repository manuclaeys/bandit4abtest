% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epsilon_greedy.R
\name{EpsilonGreedy}
\alias{EpsilonGreedy}
\title{EpsilonGreedy algorithm}
\usage{
EpsilonGreedy(visitor_reward, K = ncol(visitor_reward), epsilon = 0.25)
}
\arguments{
\item{visitor_reward}{Dataframe of integer or numeric values}

\item{K}{Integer value (optional)}

\item{epsilon}{Numeric value (optional)}
}
\value{
\itemize{ List of element:
 \item S:numerical matrix of results ,
 \item choice: choices of EpsilonGreedy,
 \item time: time of cumputation,
 \item theta_hat: mean estimated of each arm
 \item theta: real mean of each arm
 }
}
\description{
Control data in visitor_reward with \code{\link{BanditRewardControl}}
Stop if something is wrong.
Generate a matrix to save the results (S).
At each iteration play the best arm with a probability of 1-epsilon and
other arm with probability epsilon
Returns the calculation time.
Return the estimated and actual averages and number of choices for each arm.
See also \code{\link{ConditionForEpsilonGreedy}}, \code{\link{GenerateMatrixS}},
and \code{\link{PlayArm}}.
Require \code{\link{tic}} and \code{\link{toc}} from \code{\link{tictoc}} library
}
\examples{
## Generates 10000 numbers from 2 binomial  distributions
set.seed(4434)
K1 <- rbinom(1000, 1, 0.6)
K2 <- rbinom(1000, 1, 0.7)
## Define a dataframe of rewards
visitor_reward <- as.data.frame(cbind(K1,K2) )
#Run epsilon Greedy algorithm
epsilon_greedy_alloc  <- EpsilonGreedy(visitor_reward,epsilon  = 0.25)
epsilon_greedy_alloc$S
barplot(table(epsilon_greedy_alloc$choice),main = "Histogram of choices",xlab="arm")
epsilon_greedy_alloc$time
epsilon_greedy_alloc$theta_hat
epsilon_greedy_alloc$theta
}
