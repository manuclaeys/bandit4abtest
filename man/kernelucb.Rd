% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernelucb.R
\name{kernelucb}
\alias{kernelucb}
\title{kernelucb algorithm}
\usage{
kernelucb(
  dt,
  visitor_reward,
  update_val = 100,
  K = ncol(visitor_reward),
  delta = 1,
  lambda = 1,
  alpha = 1
)
}
\arguments{
\item{dt}{Dataframe of integer or numeric values}

\item{visitor_reward}{Dataframe of integer or numeric values}

\item{update_val}{limit the number of items used for cumpute the regression}

\item{K}{Integer value (optional)}

\item{alpha}{Numeric value (optional)}
}
\value{
\itemize{ List of element:
 \item choice: choices of kernelucb,
 \item expected: expected reward of the chosen arms,
 \item time: time of cumputation
 }
}
\description{
Control data in visitor_reward with \code{\link{BanditRewardControl}}
Stop if something is wrong.
\itemize{ At each iteration
 \item Calculates the arm expectedbilities according to a kernel regression of context in dt dataframe
 \item Choose the arm with the maximum upper bound (with alpha parameter)
 \item Receives a reward in visitor_reward for the arm and associated iteration
 \item Updates the results
 }
Returns the calculation time.
Require \code{\link{tic}} and \code{\link{toc}} from \code{\link{tictoc}} library
}
\examples{
size.tot = 1000
set.seed(4649)                          # this makes the example exactly reproducible
x1 = runif(size.tot, min=0, max=10)          # you have 4, largely uncorrelated predictors
x2 = runif(size.tot, min=0, max=10)
x3 = runif(size.tot, min=0, max=10)
x4 = runif(size.tot, min=0, max=10)
dt = cbind(x1,x2,x3,x4)
#arm reward
arm_1 <-  as.vector(c(-1,9,-8,4))
K1 = crossprod(t(dt),arm_1)
arm_2 <-  as.vector(c(-1,2,1,0))
K2 = crossprod(t(dt),arm_2)
arm_3 <-  as.vector(c(-1,-5,1,10))
K3 = crossprod(t(dt),arm_3)
visitor_reward <-  data.frame(K1,K2,K3)
dt <- as.data.frame(dt)
kernelucb(dt,visitor_reward,update_val= 100,K=ncol(visitorReward),delta=1,lambda=1,alpha=1)
}
